<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>

<!-- from http://projectpropp.yolasite.com/text-generator.php -->

<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>ProjectPropp</title>
<meta name="description" content="" />
<meta name="keywords" content="" />
<style type="text/css">
body{
    background-color:#7f0000;
    text-align:center;
    margin:0;
    padding:0;
    font-family:Arial,Helvetica,sans-serif;
    font-size:13px;
}

div.ys_header{
    margin:0 auto;
    background:#fff url(templates/Artzy/resources/header.png) top center no-repeat;
}

div.ys_heading{
    text-align:left;
    width:810px;
    margin:0 auto;
    height:81px;
    padding:29px 0 0 0;
    voice-family: "\"}\"";
    voice-family:inherit;
    height:52px;
}

div.ys_heading h1{
    margin:0 0 0 30px;
    padding:0;
}

div.ys_heading h1 a,
div.ys_heading h1 a:hover{
    color:#222;
    padding:0 15px;
    margin:0;
    text-decoration:none;
}

div.ys_nav{
    width:810px;
    margin:0 auto;
}

div.ys_nav div.ys_clear{
    clear:both;
    font-size:0;
    height:1px;
}

div.ys_nav ul{
    list-style:none;
    margin:0;
    padding:5px 17px 0 17px;
}

div.ys_nav ul li{
    display:inline;
    display:block;
    float:left;
}

div.ys_nav ul li a{
    color:#333;
    display:block;
    float:left;
    padding:7px 14px 6px 14px;
    text-decoration:none;
    font-size:13px;
}

div.ys_nav ul li a:hover{
    color:#c00;
}

div.ys_nav ul li.current_page_item a{
    font-weight:bold;
    color:#c00;
}

div.ys_banner_wrap{
    background:#fff url(templates/Artzy/resources/menu-end.png) top left no-repeat;
    _behavior: url(templates/Artzy/resources/iepngfix.htc);
    padding:0;
    width:810px;
    margin:0 auto;
    height:228px;
}

div#sys_banner{
    background:#fff url(templates/Artzy/resources/banner.png) top center no-repeat;
    width:790px;
    margin:0 auto;
    height:228px;
    margin-left:10px;
}

div#sys_banner div.ys_shadow{
    background: url(templates/Artzy/resources/menu-end-tile.png) top left no-repeat;
    _behavior: url(templates/Artzy/resources/iepngfix.htc);
    width:790px;
    height:228px;
}

div.ys_content{
    background: url(templates/Artzy/resources/gradient.png) top left repeat-x;
    padding:25px 0 20px 0;
    min-height:500px;
}

div#content{
    width:810px;
    background:#fff;
    margin:0 auto;
    padding:15px;
    text-align:left;
}

/* Variables - only edit these */





body{
    font-family:Arial,Helvetica,sans-serif;
    font-size:12px;
    color:#444;
}

a{
    color:#1553b9;
    text-decoration:underline;
}

a:hover{
    text-decoration:none;
    color:#1553b9
}

a img{border:none;}

p{
    margin: 0;
    padding: 5px 0;
}

h1 a, h2 a, h3 a, h4 a, h5 a, h6 a{color: #900000;}
h1 a:hover, h2 a:hover, h3 a:hover, h4 a:hover, h5 a:hover, h6 a:hover{color: #900000;}
h1, h2, h3, h4, h5, h6{
    color: #900000;
    margin: 5px 0;
    padding: 10px 0;
}

h1{font-size: 200%;}
h2{font-size: 180%;}
h3{font-size: 160%;}
h4{font-size: 140%;}
h5{font-size: 130%;}
h6{font-size: 100%;}
</style>

</head>

<body id="sys_background">

  <div class="ys_content">
    <div id="content">
      <div style="width: 100%; padding: 0px; margin: 0px" class="layout_1-column">
        <div id="layout_row1">
	  <p>Original page at <a href="http://projectpropp.yolasite.com/text-generator.php">http://projectpropp.yolasite.com/text-generator.php</a></p>
	  <div id="sys_region_1" style="margin:0px; padding:5px; vertical-align:top; line-height:normal; min-width:100px" class="zone_top">
	    <div id="I8" style="display:block;clear: both;" class="Text_Default">
	      <div id="I8_sys_txt" class="sys_txt" style="margin:0px; padding:0px; color:; font:; background-color:;">
		<p>&nbsp;The
		text below was generated by combining Propp's 31 functions of the
		folktale.&nbsp; Some functions are completely random, while
		others&nbsp;must always occur or&nbsp;are dependent on the occurance of
		other functions.&nbsp;For a full discussion of how this program was
		created and&nbsp;its significance, please visit&nbsp;my discussion
		page.&nbsp;&nbsp;</p>
		<p>To generate a new Propp story, refresh your browser.</p>
		<p>&nbsp;</p>
	      </div>
	    </div>
	    <div id="I9" style="display:block;clear: both;" class="Text_Default">
	      <div id="I9_sys_txt" class="sys_txt" style="margin:0px; padding:0px; color:; font:; background-color:;">
		<p>
		  <font color="#990066" face="Georgia" size="4">
		    <em>
		    <font color="#000000">Once Upon a Time...</font>&nbsp;</em>
		  </font>
		</p>
	      </div>
	    </div>
	    <div id="I6" style="display:block;clear: both;text-align:left;" class="HTML_Default">
	      <div id="I6_html">
<script type="text/javascript">

	  var story = [];

	  // This Makes a Random Number
	  function GetRnd (HowBig) {
	  var output = Math.random();
	  output = Math.round(HowBig * output);
	  return output;
	  }


	  //Interdiction
	  function Interdiction() {
	  Interdiction_Result = (GetRnd(1)+1);

	  story.push ('Interdiction '+Interdiction_Result+'.');

	  if (Interdiction_Result == 1) {
	  story.push ('The Hero is told not to do something.' + '<br />');
	  }

	  if (Interdiction_Result == 2) {
	  story.push ('The Hero is given an order or suggestion.' + '<br />');
	  }
	  return Interdiction_Result;
	  }

	  //Absentation
	  function Absentation() {
	  Absentation_Result = (GetRnd(2)+1);
	  story.push('Absentation '+Absentation_Result+'.');

	  if (Absentation_Result == 1) {
	  story.push('An older person leaves home.'+ '<br />');
	  }

	  if (Absentation_Result == 2) {
	  story.push('The Heros parent or parents die.'+ '<br />');
	  }

	  if (Absentation_Result == 3) {
	  story.push('The Hero and/or members of the younger generation leave home.'+ '<br />');
	  }
	  return Absentation_Result;
	  }

	  //Violation
	  function Violation() {
	  if (interdiction1_happen ==1 ){

	  if (Interdiction_Result == 1){
	  Violation_Result = 1;
          }
	  if (Interdiction_Result == 2) {
	  Violation_Result = 2;
          }
	  }

	  if (interdiction1_happen==0){
	  Violation_Result = 3;
	  }



	  story.push('Violation '+Violation_Result+ '.');

	  if (Violation_Result==1){
	  story.push('The Hero does the thing he was told not to do.'+ '<br />');
	  }

	  if (Violation_Result==2){
	  story.push('The Hero does not follow the order or suggestion.'+ '<br />');
	  }

	  if (Violation_Result==3){
	  story.push('The Hero unwittingly violates a rule or law.'+ '<br />');
	  }
	  return Violation_Result;
	  }


	  //Reconaissance
	  function Reconnaissance() {
	  Reconnaissance_Result = (GetRnd(2)+1);
	  story.push('Reconnaissance '+Reconnaissance_Result+'.');

	  if (Reconnaissance_Result == 1) {
	  story.push('The Villain attempts to find out the location of children or a precious object'+ '<br />');
	  }

	  if (Reconnaissance_Result == 2) {
	  story.push('The Hero attempts to get information from the Villain'+ '<br />');
	  }

	  if (Reconnaissance_Result == 3) {
	  story.push('Someone attempts to question the Hero'+ '<br />');
	  }
	  return Reconnaissance_Result;
	  }


	  //Delivery
	  function Delivery() {
	  if (reconnaissance1_happen ==1 ){

	  if (Reconnaissance_Result == 1){
	  Delivery_Result = 1;
          }
	  if (Reconnaissance_Result == 2) {
	  Delivery_Result = 2;
          }
	  if (Reconnaissance_Result == 3) {
	  Delivery_Result = 3;
          }
	  }

	  if (reconnaissance1_happen ==0 ){
	  Delivery_Result = 4;
	  }



	  story.push('Delivery '+Delivery_Result+ '.');

	  if (Delivery_Result==1){
	  story.push('and the Villain directly receives the desired information.'+ '<br />');
	  }

	  if (Delivery_Result==2){
	  story.push('and the Hero receives information from the Villain.'+ '<br />');
	  }

	  if (Delivery_Result==3){
	  story.push('and that person receives an answer.'+ '<br />');
	  }

	  if (Delivery_Result==4){
	  story.push('The Villain accidentally finds out information about the Hero.'+ '<br />');
	  }

	  return Delivery_Result;
	  }

	  //Trickery
	  function Trickery() {
	  Trickery_Result = (GetRnd(2)+1);
	  story.push ('Trickery '+Trickery_Result+'.');

	  if (Trickery_Result == 1) {
	  story.push ('The Villain, in disguise, uses persuasion on the Hero.'+ '<br />');
	  }

	  if (Trickery_Result == 2) {
	  story.push ('The Villain proceeds to act by direct application of magical means.' + '<br />');
	  }

	  if (Trickery_Result == 3) {
	  story.push ('The Villain employs deception or coercion on the Hero.' + '<br />');
	  }

	  return Trickery_Result;
	  }

	  function Complicity() {
	  if (trickery1_happen ==1 ){

	  if (Trickery_Result == 1){
	  Complicity_Result = 1;
          }
	  if (Trickery_Result == 2) {
	  Complicity_Result = 2;
          }
	  if (Trickery_Result == 3) {
	  Complicity_Result = 3;
          }
	  }

	  if (trickery1_happen ==0 ){
	  Complicity_Result = 4;
	  }



	  story.push('Complicity '+Complicity_Result+ '.');

	  if (Complicity_Result==1){
	  story.push('and the Hero agrees to all of the Villains persuasions.' + '<br />');
	  }

	  if (Complicity_Result==2){
	  story.push('and the Hero is affected by the Villains application of magical means.' + '<br />');
	  }

	  if (Complicity_Result==3){
	  story.push('and the Hero is deceived or coerced by the Villain.' + '<br />');
	  }

	  if (Complicity_Result==4){
	  story.push('The Hero accidentally facilitates the Villains plans.' + '<br />');
	  }

	  return Complicity_Result;
	  }

	  //Villany
	  function Villany() {
	  Villany_Result = (GetRnd(18)+1);
	  story.push ('Villany '+Villany_Result+'.');

	  if (Villany_Result == 1) {
	  story.push ('The Villain abducts a person.' + '<br />');
	  }

	  if (Villany_Result == 2) {
	  story.push ('The Villain seizes or takes away a magical agent.' + '<br />');
	  }

	  if (Villany_Result == 3) {
	  story.push ('The Villain pillages or spoils the crops.' + '<br />');
	  }

	  if (Villany_Result == 4) {
	  story.push ('The Villain seizes an element of nature.' + '<br />');
	  }

	  if (Villany_Result == 5) {
	  story.push ('The Villain plunders.' + '<br />');
	  }

	  if (Villany_Result == 6) {
	  story.push ('The Villain causes bodily injury.' + '<br />');
	  }

	  if (Villany_Result == 7) {
	  story.push ('The Villain causes a sudden disappearance.' + '<br />');
	  }

	  if (Villany_Result == 8) {
	  story.push ('The Villain demands or entices his victim.' + '<br />');
	  }

	  if (Villany_Result == 9) {
	  story.push ('The Villain expels someone.' + '<br />');
	  }

	  if (Villany_Result == 10) {
	  story.push ('The Villain orders someone to be thrown into the sea.' + '<br />');
	  }

	  if (Villany_Result == 11) {
	  story.push ('The Villain casts a spell upon someone or something.' + '<br />');
	  }

	  if (Villany_Result == 12) {
	  story.push ('The Villain effects a substitution.' + '<br />');
	  }

	  if (Villany_Result == 13) {
	  story.push ('The Villain orders a murder to be committed.' + '<br />');
	  }

	  if (Villany_Result == 14) {
	  story.push ('The Villain commits a murder.' + '<br />');
	  }

	  if (Villany_Result == 15) {
	  story.push ('The Villain imprisons or detains someone.' + '<br />');
	  }

	  if (Villany_Result == 16) {
	  story.push ('The Villain threatens forced matrimony.' + '<br />');
	  }

	  if (Villany_Result == 17) {
	  story.push ('The Villain makes a threat of cannibalism.' + '<br />');
	  }

	  if (Villany_Result == 18) {
	  story.push ('The Villain torments at night.' + '<br />');
	  }

	  if (Villany_Result == 19) {
	  story.push ('The Villain declares war.' + '<br />');
	  }

	  return Villany_Result;
	  }

	  //Lack
	  function Lack() {
	  Lack_Result = (GetRnd(4)+1);
	  story.push ('Lack '+Lack_Result+'.');

	  if (Lack_Result == 1) {
	  story.push ('The Hero lacks a bride.' + '<br />');
	  }

	  if (Lack_Result == 2) {
	  story.push ('A magical agent is needed.' + '<br />');
	  }

	  if (Lack_Result == 3) {
	  story.push ('A wondrous object(s) is(are) lacking.' + '<br />');
	  }

	  if (Lack_Result == 4) {
	  story.push ('An item specific to the Hero or Villain is lacking.' + '<br />');
	  }

	  if (Lack_Result == 5) {
	  story.push ('A rationalized object, such as money or food, is lacking.' + '<br />');
	  }

	  return Lack_Result;
	  }

	  //Mediation
	  function Mediation() {

	  if (Villany_Result == 9) {
	  Mediation_Result = (GetRnd(6)+1);
	  }
	  if (Villany_Result == 15){
	  Mediation_Result = (GetRnd(5)+1);
	  }

	  if (Villany_Result == 8){
	  Mediation_Result = (GetRnd(5)+1);
	  }

	  if (Villany_Result == 10){
	  Mediation_Result = (GetRnd(5)+1);
	  }

	  if (Villany_Result == 1){
	  Mediation_Result = (GetRnd(4)+1);
	  }

	  if (Villany_Result == 3){
	  Mediation_Result = (GetRnd(4)+1);
	  }

	  if (Villany_Result == 5){
	  Mediation_Result = (GetRnd(4)+1);
	  }

	  if (Villany_Result == 6){
	  Mediation_Result = (GetRnd(4)+1);
	  }

	  if (Villany_Result == 11){
	  Mediation_Result = (GetRnd(4)+1);
	  }

	  if (Villany_Result == 12){
	  Mediation_Result = (GetRnd(4)+1);
	  }

	  if (Villany_Result == 13){
	  Mediation_Result = (GetRnd(4)+1);
	  }

	  if (Villany_Result == 14){
	  Mediation_Result = (GetRnd(4)+1);
	  }

	  if (Villany_Result == 16){
	  Mediation_Result = (GetRnd(4)+1);
	  }

	  if (Villany_Result == 18){
	  Mediation_Result = (GetRnd(4)+1);
	  }

	  if (Villany_Result == 19){
	  Mediation_Result = (GetRnd(4)+1);
	  }

	  if (Mediation_Result == 0){
	  Mediation_Result = (GetRnd(3)+1);
	  }

	  if (Lack_Result == 1) {
	  Mediation_Result = 3;
	  }

	  story.push ('Mediation '+Mediation_Result+'.');

	  if (Mediation_Result == 1) {
	  story.push ('A call for help is given with the resultant dispatch of the Hero.' + '<br />');
	  }

	  if (Mediation_Result == 2) {
	  story.push ('The Hero is dispatched directly.' + '<br />');
	  }

	  if (Mediation_Result == 3) {
	  story.push ('The Hero is allowed to depart from home.' + '<br />');
	  }

	  if (Mediation_Result == 4) {
	  story.push ('Misfortune is announced.' + '<br />');
	  }

	  if (Mediation_Result == 5) {
	  story.push ('A lament is sung.' + '<br />');
	  }

	  if (Mediation_Result == 6) {
	  story.push ('The Hero condemned to death is secretly freed.' + '<br />');
	  }

	  if (Mediation_Result == 7) {
	  story.push ('The banished Hero is transported away from home.' + '<br />');
	  }

	  return Mediation_Result;
	  }

	  //Beginning Counteraction
	  function Beginningcounteraction() {
	  Beginningcounteraction_Result = 1;
	  story.push ('Beginning Counteraction 1. The Hero decides and may declare his or her intent for action' + '<br />');
	  return Departure_Result;
	  }

	  //Departure
	  function Departure() {
	  Departure_Result = 1;
	  story.push ('Departure 1. The Hero leaves home' + '<br />');
	  return Departure_Result;
	  }

	  //First Function of the Donor
	  function Firstfunctionofthedonor() {
	  Firstfunctionofthedonor_Result = (GetRnd(9)+1);
	  story.push ('First function of the donor ' +Firstfunctionofthedonor_Result+'. ');

	  if (Firstfunctionofthedonor_Result == 1){
	  story.push ('A Donor tests the Hero. ' + '<br />');
	  }

	  if (Firstfunctionofthedonor_Result == 2){
	  story.push ('A Donor greets and interrogates the Hero. ' + '<br />');
	  }

	  if (Firstfunctionofthedonor_Result == 3){
	  story.push ('A dying or deceased person requests the rendering of a service from the Hero. ' + '<br />');
	  }

	  if (Firstfunctionofthedonor_Result == 4){
	  story.push ('A prisoner begs the Hero for his freedom. ' + '<br />');
	  }

	  if (Firstfunctionofthedonor_Result == 5){
	  story.push ('The Hero is approached with a request for mercy. ' + '<br />');
	  }

	  if (Firstfunctionofthedonor_Result == 6){
	  story.push ('Disputants request a divison of property from the Hero. ' + '<br />');
	  }

	  if (Firstfunctionofthedonor_Result == 7){
	  story.push ('A Donor makes a request of the Hero. ' + '<br />');
	  }

	  if (Firstfunctionofthedonor_Result == 8){
	  story.push ('A hostile creature attempts to destroy the Hero. ' + '<br />');
	  }

	  if (Firstfunctionofthedonor_Result == 9){
	  story.push ('A hostile creature engages the Hero in combat. ' + '<br />');
	  }

	  if (Firstfunctionofthedonor_Result == 10){
	  story.push ('The Hero is shown a magical agent which is offered in exchange. ' + '<br />');
	  }
	  return Firstfunctionofthedonor_Result;
	  }

	  //Heros Reaction
	  function Herosreaction() {
	  Herosreaction_Result = (Firstfunctionofthedonor_Result);
	  if (Herosreaction_Result < 7){
	  var negorpos = GetRnd(1);
          if (negorpos == 1){
          Herosreaction_Result = (Herosreaction_Result*-1);
          }
	  }

	  if (Herosreaction_Result == 9){
	  var negorpos = GetRnd(1);
          if (negorpos == 1){
          Herosreaction_Result = (Herosreaction_Result*-1);
          }
	  }


	  story.push ('Heros Reaction ' +Herosreaction_Result+'. ');

	  if (Herosreaction_Result == 1){
	  story.push ('The Hero withstands the Donors test. ' + '<br />');
	  }
	  if (Herosreaction_Result == -1){
	  story.push ('The Hero does not withstand the Donors test. ' + '<br />');
	  }
	  if (Herosreaction_Result == 2){
	  story.push ('The Hero answers the Donors greeting. ' + '<br />');
	  }
	  if (Herosreaction_Result == -2){
	  story.push ('The Hero does not answer the Donors greeting. ' + '<br />');
	  }
	  if (Herosreaction_Result == 3){
	  story.push ('The Hero renders a service to the dead or dying person. ' + '<br />');
	  }
	  if (Herosreaction_Result == -3){
	  story.push ('The Hero does not render a service to the dead or dying person. ' + '<br />');
	  }
	  if (Herosreaction_Result == 4){
	  story.push ('The Hero frees the prisoner. ' + '<br />');
	  }
	  if (Herosreaction_Result == -4){
	  story.push ('The Hero does not free the prisoner. ' + '<br />');
	  }
	  if (Herosreaction_Result == 5){
	  story.push ('The Hero shows mercy to the supplicant. ' + '<br />');
	  }
	  if (Herosreaction_Result == -5){
	  story.push ('The Hero does not show mercy to the supplicant. ' + '<br />');
	  }
	  if (Herosreaction_Result == 6){
	  story.push ('The Hero completes the apportionment and reconciles the disputants. ' + '<br />');
	  }
	  if (Herosreaction_Result == -6){
	  story.push ('The Hero deceives the disputants and seizes the disputed objects. ' + '<br />');
	  }
	  if (Herosreaction_Result == 7){
	  story.push ('The Hero renders service to the Donor. ' + '<br />');
	  }
	  if (Herosreaction_Result == -7){
	  story.push ('The Hero does not render service to the Donor. ' + '<br />');
	  }
	  if (Herosreaction_Result == 8){
	  story.push ('The Hero saves himself from an attempt on his life by employing the same tactic used by his adversary. ' + '<br />');
	  }
	  if (Herosreaction_Result == 9){
	  story.push ('The Hero vanquishes his adversary. ' + '<br />');
	  }
	  if (Herosreaction_Result == -9){
	  story.push ('The hostile creature beats the Hero in combat. ' + '<br />');
	  }
	  if (Herosreaction_Result == 10){
	  story.push ('The Hero agrees to an exchange, but immediately employs the magic power of the object exchanged against the barterer. ' + '<br />');
	  }

	  return Herosreaction_Result;
	  }

	  //Hero Aquires Magical Agent
	  function Heroaquiresmagicalagent() {

	  if (Herosreaction_Result == 0) {
	  Heroaquiresmagicalagent_Result = (GetRnd(4)+5);
	  }

	  if (Herosreaction_Result < 0) {
	  Heroaquiresmagicalagent_Result = (GetRnd(4)+4);
	  if (Heroaquiresmagicalagent_Result == 4){
	  Heroaquiresmagicalagent_Result = 0;
	  return Heroaquiresmagicalagent_Result;
	  }
	  }

	  if (Herosreaction_Result == 8) {
	  Heroaquiresmagicalagent_Result = (GetRnd(4)+4);
	  if (Heroaquiresmagicalagent_Result == 4){
	  Heroaquiresmagicalagent_Result = 0;
	  return Heroaquiresmagicalagent_Result;
	  }
	  }

	  if (Herosreaction_Result == 10) {
	  Heroaquiresmagicalagent_Result = (GetRnd(4)+4);
	  if (Heroaquiresmagicalagent_Result == 4){
	  Heroaquiresmagicalagent_Result = 0;
	  return Heroaquiresmagicalagent_Result;
	  }
	  }

	  if (Herosreaction_Result == 1) {
	  Heroaquiresmagicalagent_Result = (GetRnd(4)+1);
	  if (Heroaquiresmagicalagent_Result == 5){
	  Heroaquiresmagicalagent_Result = 9;
	  }
	  }

	  if (Herosreaction_Result == 2) {
	  Heroaquiresmagicalagent_Result = (GetRnd(4)+1);
	  if (Heroaquiresmagicalagent_Result == 5){
	  Heroaquiresmagicalagent_Result = 9;
	  }
	  }
	  if (Herosreaction_Result == 3) {
	  Heroaquiresmagicalagent_Result = (GetRnd(4)+1);
	  if (Heroaquiresmagicalagent_Result == 5){
	  Heroaquiresmagicalagent_Result = 9;
	  }
	  }
	  if (Herosreaction_Result == 4) {
	  Heroaquiresmagicalagent_Result = (GetRnd(4)+1);
	  if (Heroaquiresmagicalagent_Result == 5){
	  Heroaquiresmagicalagent_Result = 9;
	  }
	  }

	  if (Herosreaction_Result == 5) {
	  Heroaquiresmagicalagent_Result = (GetRnd(4)+1);
	  if (Heroaquiresmagicalagent_Result == 5){
	  Heroaquiresmagicalagent_Result = 9;
	  }
	  }

	  if (Herosreaction_Result == 6) {
	  Heroaquiresmagicalagent_Result = (GetRnd(4)+1);
	  if (Heroaquiresmagicalagent_Result == 5){
	  Heroaquiresmagicalagent_Result = 9;
	  }
	  }

	  if (Herosreaction_Result == 7) {
	  Heroaquiresmagicalagent_Result = (GetRnd(4)+1);
	  if (Heroaquiresmagicalagent_Result == 5){
	  Heroaquiresmagicalagent_Result = 9;
	  }
	  }
	  if (Herosreaction_Result == 9) {
	  Heroaquiresmagicalagent_Result = (GetRnd(4)+1);
	  if (Heroaquiresmagicalagent_Result == 5){
	  Heroaquiresmagicalagent_Result = 9;
	  }
	  }

	  story.push ('Heros Aquires Magical Agent ' +Heroaquiresmagicalagent_Result+'. ');

	  if (Heroaquiresmagicalagent_Result == 1){
	  story.push ('The Hero aquires a magical agent as a reward or gift. ' + '<br />');
	  }

	  if (Heroaquiresmagicalagent_Result == 2){
	  story.push ('The Donor points out a magical agent. ' + '<br />');
	  }

	  if (Heroaquiresmagicalagent_Result == 3){
	  story.push ('The Donor prepares a magical agent for the Hero. ' + '<br />');
	  }

	  if (Heroaquiresmagicalagent_Result == 4){
	  story.push ('The Donor sells a magical agent to the Hero. ' + '<br />');
	  }

	  if (Heroaquiresmagicalagent_Result == 5){
	  story.push ('A magical agent falls into the Heros hands by chance. ' + '<br />');
	  }

	  if (Heroaquiresmagicalagent_Result == 6){
	  story.push ('A magical agent suddenly appears to the Hero of its own accord. ' + '<br />');
	  }

	  if (Heroaquiresmagicalagent_Result == 7){
	  story.push ('A magical agent is eaten or drunk. ' + '<br />');
	  }

	  if (Heroaquiresmagicalagent_Result == 8){
	  story.push ('A magical agent is seized. ' + '<br />');
	  }

	  if (Heroaquiresmagicalagent_Result == 9){
	  story.push ('A character or animal places themself at the disposal of the Hero. ' + '<br />');
	  }

	  return Heroaquiresmagicalagent_Result;
	  }

	  //Guidance
	  function Guidance() {
	  Guidance_Result = (GetRnd(5)+1);
	  story.push('Guidance '+Guidance_Result+'.');

	  if (Guidance_Result == 1) {
	  story.push('The Hero flies through the air.  ' + '<br />');
	  }

	  if (Guidance_Result == 2) {
	  story.push('The Hero travels on the ground or on water.  ' + '<br />');
	  }

	  if (Guidance_Result == 3) {
	  story.push('The Hero is led to the objective.  ' + '<br />');
	  }

	  if (Guidance_Result == 4) {
	  story.push('The Heros route to the objective is shown.  ' + '<br />');
	  }

	  if (Guidance_Result == 5) {
	  story.push('The Hero makes use of stationary means of travel, such as bridges, stairways or secret passageways.  ' + '<br />');
	  }

	  if (Guidance_Result == 6) {
	  story.push('The Hero follows tracks.  ' + '<br />');
	  }

	  return Guidance_Result;
	  }

	  //Struggle
	  function Struggle() {
	  Struggle_Result = (GetRnd(2)+1);
	  story.push('Struggle '+Struggle_Result+'.');

	  if (Struggle_Result == 1) {
	  story.push('The Hero and Villain engage in combat.  ' + '<br />');
	  }

	  if (Struggle_Result == 2) {
	  story.push('The Hero and Villain engage in a competition.  ' + '<br />');
	  }

	  if (Struggle_Result == 3) {
	  story.push('The Hero and Villain play a game, such as cards.  ' + '<br />');
	  }

	  return Struggle_Result;
	  }

	  //Branding
	  function Branding() {
	  Branding_Result = (GetRnd(1)+1);
	  story.push('Branding '+Branding_Result+'.');

	  if (Branding_Result == 1) {
	  story.push('A brand is applied to the Heros body.  ' + '<br />');
	  }

	  if (Branding_Result == 2) {
	  story.push('The Hero receives an identifying token.  ' + '<br />');
	  }

	  return Branding_Result
	  }

	  //Victory
	  function Victory() {
	  if (Struggle_Result == 1){
	  var useful = GetRnd(1);
	  if (useful == 0){
	  Victory_Result = 1 ;
	  }
	  if (useful == 1){
	  Victory_Result = (-1);
	  }
	  }

	  if (Struggle_Result == 2){
	  var useful = GetRnd(1);
	  if (useful == 0){
	  Victory_Result = 2 ;
	  }
	  if (useful == 1){
	  Victory_Result = (-2);
	  }
	  }

	  if (Struggle_Result == 3){
	  var useful = GetRnd(1);
	  if (useful == 0){
	  Victory_Result = 3 ;
	  }
	  if (useful == 1){
	  Victory_Result = (-3);
	  }
	  }

	  if (Struggle_Result == 0) {
	  Victory_Result = (GetRnd(1)+4);
	  }

	  //Correcting for vil6, no magical agent
	  if (Villany_Result == 6){
	  if (Heroaquiresmagicalagent_Result == 0){
	  Victory_Result = Math.abs(Victory_Result);
	  }
	  }

	  story.push('Victory '+Victory_Result+'.');

	  if (Victory_Result == 1) {
	  story.push('The Villain is defeated in combat.  ' + '<br />');
	  }

	  if (Victory_Result == -1) {
	  story.push('However, the Villain defeats the Hero in combat.  ' + '<br />');
	  }

	  if (Victory_Result == 2) {
	  story.push('The Hero wins the competition!  ' + '<br />');
	  }

	  if (Victory_Result == -2) {
	  story.push('But, the Villain beats the Hero in the competition.  ' + '<br />');
	  }

	  if (Victory_Result == 3) {
	  story.push('And the Hero wins the game.  ' + '<br />');
	  }

	  if (Victory_Result == -3) {
	  story.push('And Alas! The Hero loses the game.  ' + '<br />');
	  }

	  if (Victory_Result == 4) {
	  story.push('The Hero finds and kills the Villain without a preliminary fight.  ' + '<br />');
	  }

	  if (Victory_Result == 5) {
	  story.push('The Hero finds the power to banish the Villain directly.  ' + '<br />');
	  }

	  return Victory_Result
	  }

	  function Liquidation(){

	  if (Villany_Result > 0){
	  if (Villany_Result == 1){
	  if (Heroaquiresmagicalagent_Result > 0){
          Liquidation_Result = (GetRnd(5)+1);
          if (Liquidation_Result == 6){
          Liquidation_Result = 10;
          }
	  }
	  if (Heroaquiresmagicalagent_Result == 0){
          Liquidation_Result = (GetRnd(4)+1);
          if (Liquidation_Result == 5){
          Liquidation_Result = 10;
          }
	  }
	  }

	  if (Villany_Result == 2){
	  if (Heroaquiresmagicalagent_Result > 0){
          Liquidation_Result = (GetRnd(3)+1);
          if (Liquidation_Result == 3){
          Liquidation_Result = 4;
          }
          if (Liquidation_Result == 4){
          Liquidation_Result = 5;
          }
	  }
	  if (Heroaquiresmagicalagent_Result == 0){
          Liquidation_Result = (GetRnd(2)+1);
          if (Liquidation_Result == 3){
          Liquidation_Result = 4;
          }
	  }
	  }

	  if (Villany_Result == 3){
	  if (Heroaquiresmagicalagent_Result > 0){
          Liquidation_Result = (GetRnd(2)+5);
	  }
	  if (Heroaquiresmagicalagent_Result == 0){
          Liquidation_Result = 7;
	  }
	  }

	  if (Villany_Result == 4){
	  if (Heroaquiresmagicalagent_Result > 0){
          Liquidation_Result = (GetRnd(5)+1);
          if (Liquidation_Result == 6){
          Liquidation_Result = 8;
          }
	  }
	  if (Heroaquiresmagicalagent_Result == 0){
          Liquidation_Result = (GetRnd(4)+1);
          if (Liquidation_Result == 5){
          Liquidation_Result = 8;
          }
	  }
	  }

	  if (Villany_Result == 5){
	  if (Heroaquiresmagicalagent_Result > 0){
          Liquidation_Result = (GetRnd(4)+4);
          if (Liquidation_Result == 8){
          Liquidation_Result = 1;
          }
	  }
	  if (Heroaquiresmagicalagent_Result == 0){
          Liquidation_Result = (GetRnd(2)+1);
          if (Liquidation_Result == 2){
          Liquidation_Result = 4;
          }
          if (Liquidation_Result == 3){
          Liquidation_Result = 7;
          }
	  }
	  }

	  if (Villany_Result == 6){
	  Liquidation_Result = 5;
	  }

	  if (Villany_Result == 7){
	  if (Heroaquiresmagicalagent_Result > 0){
          Liquidation_Result = (GetRnd(3)+1);
          if (Liquidation_Result > 2){
          Liquidation_Result = (Liquidation_Result + 2);
          }
	  }
	  if (Heroaquiresmagicalagent_Result == 0){
          Liquidation_Result = (GetRnd(2)+1) ;
          if (Liquidation_Result == 3){
          Liquidation_Result = 4;
          }
	  }
	  }
	  if (Villany_Result == 8){
	  if (Heroaquiresmagicalagent_Result > 0){
          Liquidation_Result = ((GetRnd(3)*2)+1);
          if (Liquidation_Result == 9){
          Liquidation_Result = 10 ;
          }
	  }
	  if (Heroaquiresmagicalagent_Result == 0){
          Liquidation_Result = (GetRnd(2)+1) ;
          if (Liquidation_Result == 2){
          Liquidation_Result = 10;
          }
	  }
	  }

	  if (Villany_Result == 9){
	  if (Heroaquiresmagicalagent_Result > 0){
          Liquidation_Result = (GetRnd(1)+4);
	  }
	  if (Heroaquiresmagicalagent_Result == 0){
          Liquidation_Result = 4
	  }
	  }

	  if (Villany_Result == 10){
	  if (Heroaquiresmagicalagent_Result > 0){
          Liquidation_Result = ((GetRnd(2)*2)+5);
	  }
	  if (Heroaquiresmagicalagent_Result == 0){
          Liquidation_Result = ((GetRnd(1)*2)+7) ;
	  }
	  }

	  if (Villany_Result == 11){
	  if (Heroaquiresmagicalagent_Result > 0){
          Liquidation_Result = (GetRnd(4)+3);
          if (Liquidation_Result > 5){
          Liquidation_Result = (Liquidation_Result + 1);
          }
	  }
	  if (Heroaquiresmagicalagent_Result == 0){
          Liquidation_Result = (GetRnd(3)+3) ;
          if (Liquidation_Result > 4){
          Liquidation_Result = (Liquidation_Result + 2);
          }
	  }
	  }

	  if (Villany_Result == 12){
	  if (Heroaquiresmagicalagent_Result > 0){
          Liquidation_Result = (GetRnd(5)+1);
          if (Liquidation_Result == 3){
          Liquidation_Result = 7;
          }
          if (Liquidation_Result == 6){
          Liquidation_Result = 8;
          }
	  }
	  if (Heroaquiresmagicalagent_Result == 0){
          Liquidation_Result = (GetRnd(4)+1) ;
          if (Liquidation_Result == 3){
          Liquidation_Result = 7;
          }
          if (Liquidation_Result == 5){
          Liquidation_Result = 8;
          }
	  }
	  }

	  if (Villany_Result == 13){
	  Liquidation_Result = 9;
	  }

	  if (Villany_Result == 14){
	  Liquidation_Result = 9;
	  }

	  if (Villany_Result == 15){
	  if (Heroaquiresmagicalagent_Result > 0){
          Liquidation_Result = (GetRnd(4)+1);
          if (Liquidation_Result == 3){
          Liquidation_Result = 10;
          }
	  }
	  if (Heroaquiresmagicalagent_Result == 0){
          Liquidation_Result = (GetRnd(3)+1) ;
          if (Liquidation_Result == 3){
          Liquidation_Result = 10;
          }
	  }
	  }

	  if (Villany_Result == 16){
	  if (Heroaquiresmagicalagent_Result > 0){
          Liquidation_Result = (GetRnd(3)+1);
          if (Liquidation_Result == 3){
          Liquidation_Result = 5;
          }
          if (Liquidation_Result == 4){
          Liquidation_Result = 10;
          }
	  }
	  if (Heroaquiresmagicalagent_Result == 0){
          Liquidation_Result = (GetRnd(2)+1) ;
          if (Liquidation_Result == 3){
          Liquidation_Result = 10;
          }
	  }
	  }

	  if (Villany_Result == 17){
	  Liquidation_Result = 3;
	  }

	  if (Villany_Result == 18){
	  Liquidation_Result = ((GetRnd(1)*4)+3);
	  }

	  if (Villany_Result == 19){
	  Liquidation_Result = 3;
	  }

	  story.push('Liquidation of Villany '+Liquidation_Result+':');

	  if (Liquidation_Result == 1) {
	  story.push('The Hero seizes the object of the search by force or use of cleverness.  ' + '<br />');
	  }

	  if (Liquidation_Result == 2) {
	  story.push('The object of search is obtained by several personages at once, through a rapid interchange of their actions.  ' + '<br />');
	  }

	  if (Liquidation_Result == 3) {
	  story.push('The object of search is obtained with the help of enticements.  ' + '<br />');
	  }

	  if (Liquidation_Result == 4) {
	  story.push('The object of search is obtained as the direct result of preceding actions.  ' + '<br />');
	  }

	  if (Liquidation_Result == 5) {
	  story.push('The object is obtained instantly through the use of a magical agent.  ' + '<br />');
	  }

	  if (Liquidation_Result == 6) {
	  story.push('The use of a magical agent overcomes poverty.  ' + '<br />');
	  }

	  if (Liquidation_Result == 7) {
	  story.push('The object of search is caught.  ' + '<br />');
	  }

	  if (Liquidation_Result == 8) {
	  story.push('The spell is broken.  ' + '<br />');
	  }

	  if (Liquidation_Result == 9) {
	  story.push('The slain person is revived.  ' + '<br />');
	  }

	  if (Liquidation_Result == 10) {
	  story.push('The captive is freed.  ' + '<br />');
	  }

	  if (Liquidation_Result == 11) {
	  story.push('The object of search is given as a reward or gift, is pointed out or is prepared by another person.  ' + '<br />');
	  }



	  }

	  if (Lack_Result > 0){

	  if (Lack_Result == 1){
	  if (Heroaquiresmagicalagent_Result > 0){
          Liquidation_Result = (GetRnd(4)+1);
          if (Liquidation_Result == 2){
          Liquidation_Result = 11;
          }
	  }
	  if (Heroaquiresmagicalagent_Result == 0){
          Liquidation_Result = (GetRnd(3)+1) ;
          if (Liquidation_Result == 2){
          Liquidation_Result = 11;
          }
	  }
	  }

	  if (Lack_Result == 2){
	  if (Heroaquiresmagicalagent_Result > 0){
          Liquidation_Result = (GetRnd(5)+1);
          if (Liquidation_Result == 6){
          Liquidation_Result = 11;
          }
	  }
	  if (Heroaquiresmagicalagent_Result == 0){
          Liquidation_Result = (GetRnd(4)+1) ;
          if (Liquidation_Result == 5){
          Liquidation_Result = 11;
          }
	  }
	  }

	  if (Lack_Result == 3){
	  if (Heroaquiresmagicalagent_Result > 0){
          Liquidation_Result = (GetRnd(6)+1);
          if (Liquidation_Result == 6){
          Liquidation_Result = 11;
          }
	  }
	  if (Heroaquiresmagicalagent_Result == 0){
          Liquidation_Result = (GetRnd(5)+1) ;
          if (Liquidation_Result == 6){
          Liquidation_Result = 11;
          }
          if (Liquidation_Result == 5){
          Liquidation_Result = 7;
          }
	  }
	  }

	  if (Lack_Result == 4){
	  if (Heroaquiresmagicalagent_Result > 0){
          Liquidation_Result = (GetRnd(3)+1);
          if (Liquidation_Result == 3){
          Liquidation_Result = 5;
          }
	  }
	  if (Heroaquiresmagicalagent_Result == 0){
          Liquidation_Result = (GetRnd(2)+1) ;
          if (Liquidation_Result == 3){
          Liquidation_Result = 4;
          }
	  }
	  }

	  if (Lack_Result == 5){
	  if (Heroaquiresmagicalagent_Result > 0){
          Liquidation_Result = (GetRnd(4)+1);
          if (Liquidation_Result == 3){
          Liquidation_Result = 6;
          }
	  }
	  if (Heroaquiresmagicalagent_Result == 0){
          Liquidation_Result = (GetRnd(2)+1) ;
          if (Liquidation_Result == 3){
          Liquidation_Result = 4;
          }
	  }
	  }


	  story.push('Liquidation of Lack '+Liquidation_Result+':');

	  if (Liquidation_Result == 1) {
	  story.push('The Hero seizes the object of the search by force or use of cleverness.  ' + '<br />');
	  }

	  if (Liquidation_Result == 2) {
	  story.push('The object of search is obtained by several personages at once, through a rapid interchange of their actions.  ' + '<br />');
	  }

	  if (Liquidation_Result == 3) {
	  story.push('The object of search is obtained with the help of enticements.  ' + '<br />');
	  }

	  if (Liquidation_Result == 4) {
	  story.push('The object of search is obtained as the direct result of preceding actions.  ' + '<br />');
	  }

	  if (Liquidation_Result == 5) {
	  story.push('The object is obtained instantly through the use of a magical agent.  ' + '<br />');
	  }

	  if (Liquidation_Result == 6) {
	  story.push('The use of a magical agent overcomes poverty.  ' + '<br />');
	  }

	  if (Liquidation_Result == 7) {
	  story.push('The object of search is caught.  ' + '<br />');
	  }

	  if (Liquidation_Result == 8) {
	  story.push('The spell is broken.  ' + '<br />');
	  }

	  if (Liquidation_Result == 9) {
	  story.push('The slain person is revived.  ' + '<br />');
	  }

	  if (Liquidation_Result == 10) {
	  story.push('The captive is freed.  ' + '<br />');
	  }

	  if (Liquidation_Result == 11) {
	  story.push('The object of search is given as a reward or gift, is pointed out or is prepared by another person.  ' + '<br />');
	  }


	  }

	  return;
	  }

	  //Retrn
	  function Retrn(){
	  story.push('Return.  The Hero travels home.  ' + '<br />');
	  Retrn_Result = 1;
	  return;
	  }

	  //Pursuit
	  function Pursuit() {
	  Pursuit_Result = (GetRnd(5)+1);
	  story.push ('Pursuit '+Pursuit_Result+':  ');

	  if (Pursuit_Result == 1) {
	  story.push ('A pursuer flies after the Hero.  ' + '<br />');
	  }

	  if (Pursuit_Result == 2) {
	  story.push ('The Hero is summoned as a guilty person.  ' + '<br />');
	  }

	  if (Pursuit_Result == 3) {
	  story.push ('The Hero is pursued by a shapeshifter.  ' + '<br />');
	  }

	  if (Pursuit_Result == 4) {
	  story.push ('The Hero is pursued by an entity or entities that turn into alluring objects and place themselves in the path of the hero.  ' + '<br />');
	  }

	  if (Pursuit_Result == 5) {
	  story.push ('A pursuer tries to devour the Hero.  ' + '<br />');
	  }

	  if (Pursuit_Result == 6) {
	  story.push ('A pursuer attempts to kill the Hero.  ' + '<br />');
	  }

	  return Pursuit_Result;
	  }

	  //Rescue
	  function Rescue() {
	  Rescue_Result = (GetRnd(6)+1);
	  if (Rescue_Result == 7){
	  Rescue_Result = 9;
	  }

	  if (Pursuit_Result == 4){
	  Rescue_Result = (GetRnd(7)+1);
	  if (Rescue_Result == 8){
          Rescue_Result = 9;
	  }
	  }

	  if (Pursuit_Result == 5){
	  Rescue_Result = (GetRnd(7)+1);
	  if (Rescue_Result == 7){
          Rescue_Result = 9;
	  }
	  }


	  story.push ('Rescue '+Rescue_Result+':  ');

	  if (Rescue_Result == 1) {
	  story.push ('The Hero is saved by being carried away through the air.  ' + '<br />');
	  }

	  if (Rescue_Result == 2) {
	  story.push ('The Hero flees, placing obstacles in the path of the pursuer and gets away.  ' + '<br />');
	  }

	  if (Rescue_Result == 3) {
	  story.push ('The Hero, while in flight, changes into objects that make him unrecognizable and gets away.  ' + '<br />');
	  }

	  if (Rescue_Result == 4) {
	  story.push ('The Hero hides and gets away.  ' + '<br />');
	  }

	  if (Rescue_Result == 5) {
	  story.push ('The Hero is hidden by people and gets away.  ' + '<br />');
	  }

	  if (Rescue_Result == 6) {
	  story.push ('The Hero rapidly transforms into animals and objects to be saved.  ' + '<br />');
	  }

	  if (Rescue_Result == 7) {
	  story.push ('And the Hero avoids these temptations.  ' + '<br />');
	  }

	  if (Rescue_Result == 8) {
	  story.push ('And the Hero does not allow himself/herself to be devoured.  ' + '<br />');
	  }

	  if (Rescue_Result == 9) {
	  story.push ('The Hero is saved by others.  ' + '<br />');
	  }

	  return Rescue_Result;
	  }
	  // Unrecognized Arrival

	  function Unrecognizedarrival(){
	  if (Retrn_Result > 0){
	  Unrecognizedarrival_Result = 1;
	  }
	  if (Retrn_Result == 0){
	  Unrecognizedarrival_Result = 2;
	  }

	  story.push('Unrecognized Arrival  '+Unrecognizedarrival_Result+ ': ');

	  if (Unrecognizedarrival_Result == 1) {
	  story.push ('The Hero returns home and stays incognito as an apprentice.  ' + '<br />');
	  }

	  if (Unrecognizedarrival_Result == 2) {
	  story.push ('The Hero arrives, unrecognized, at the court of a King and serves, usually as a cook or groom.  ' + '<br />');
	  }

	  return Unrecognizedarrival_Result;
	  }

	  //Unfounded Claims

	  function Unfoundedclaims() {
          Unfoundedclaims_Result = 1;
          story.push ('Unfounded Claims:  While the Hero is unrecognized, a False Hero presents unfounded claims and takes credit for the Heros deeds.  ' + '<br />');
          return Unfoundedclaims_Result;
	  }

	  // Difficult Task

	  function Difficulttask() {
          Difficulttask_Result = 1;
          story.push ('Difficult Task:  A difficult task is proposed to the Hero.  ' + '<br />');
          return Difficulttask_Result;
	  }


	  // Solution

	  function Solution() {
          Solution_Result = 1;
          story.push ('Solution:  The Hero succeeds this task.  ' + '<br />');
          return Solution_Result;
	  }

	  // Recognition

	  function Recognition() {

	  if (Branding_Result > 0){
	  Recognition_Result = 1;
	  }

	  if (Branding_Result == 0){
          if (Difficulttask_Result == 0){
          Recognition_Result = 3;
          }
          if (Difficulttask_Result == 1){
          Recognition_Result = 2;
          }
	  }
	  story.push('Recognition ' +Recognition_Result+ ':  ');

	  if (Recognition_Result == 1) {
	  story.push ('The Hero is recognized by his brand or a token.  ' + '<br />');
	  }
	  if (Recognition_Result == 2) {
	  story.push ('The Hero is recognized by the accomplishment of this amazing task.  ' + '<br />');
	  }
	  if (Recognition_Result == 3) {
	  story.push ('The Hero is recognized after a long period of separation by a family member or friend.  ' + '<br />');
	  }
	  return Recognition_Result;
	  }

	  //Exposure
	  function Exposure(){
	  if (Recognition_Result > 0){
	  Exposure_Result = 1;
	  }
	  if (Recognition_Result == 0){
	  Exposure_Result = 2;
	  }

	  story.push('Exposure ' +Exposure_Result+ ':  ');

	  if (Exposure_Result == 1) {
	  story.push ('The False Hero is exposed as a result of not being able to pass the same task that the Hero succeeds.  ' + '<br />');
	  }
	  if (Exposure_Result == 2) {
	  story.push ('The False Hero gives himself/herself away.  ' + '<br />');
	  }
	  return Exposure_Result;
	  }

	  //Transfiguration
	  function Transfiguration(){
	  Transfiguration_Result = (GetRnd(3)+1);
	  story.push('Transfiguration ' +Transfiguration_Result+ ':  ');

	  if (Transfiguration_Result == 1) {
	  story.push ('The Hero gains a new appearance by means of a magical action by a helper.  ' + '<br />');
	  }
	  if (Transfiguration_Result == 2) {
	  story.push ('The Hero builds a marvelous palace.  ' + '<br />');
	  }
	  if (Transfiguration_Result == 3) {
	  story.push ('The Hero puts on new garments.  ' + '<br />');
	  }
	  if (Transfiguration_Result == 4) {
	  story.push ('The Hero achieves a new appearance by deception and false evidence of wealth and beauty is accepted as true evidence.  ' + '<br />');
	  }

	  return Transfiguration_Result;
	  }

	  //Punishment
	  function Punishment() {
	  Punishment_Result = (GetRnd(1)+1);
	  story.push ('Punishment '+Punishment_Result+':  ');

	  if (Punishment_Result == 1) {
	  story.push ('The Villain and/or False Hero(s) are punished for their misdeeds.  ' + '<br />');
	  }

	  if (Punishment_Result == 2) {
	  story.push ('The Villain and/or False Hero(s) are magnanimously pardoned.  ' + '<br />');
	  }
	  return Punishment_Result;
	  }

	  function Wedding(){
	  Wedding_Result = (GetRnd(4)+1);
	  if (Lack_Result == 1){
	  Wedding_Result = (GetRnd(3)+1)
	  if (Wedding_Result == 3){
          Wedding_Result = 4
	  }
	  }

	  story.push ('Wedding ' +Wedding_Result+ ':  ');

	  if (Wedding_Result == 1) {
	  story.push ('The Hero is awarded a bride and a kingdom. The End.  ' + '<br />');
	  }
	  if (Wedding_Result == 2) {
	  story.push ('The Hero marries and lives happily ever after. The End.  ' + '<br />');
	  }
	  if (Wedding_Result == 3) {
	  story.push ('The Hero ascends the throne. The End.  ' + '<br />');
	  }
	  if (Wedding_Result == 4) {
	  story.push ('Shortly before the Hero receives his reward, a new misfortune occurs!  ' + '<br />');
	  }
	  if (Wedding_Result == 5) {
	  story.push ('The Hero receives a large monetary reward.  ' + '<br />');
	  }
	  return Wedding_Result;
	  }


	  //Establishing of Variables
	  var Interdiction_Result = 0;
	  var Absentation_Result = 0;
	  var Violation_Result = 0;
	  var Reconnaissance_Result = 0;
	  var Delivery_Result = 0;
	  var Trickery_Result = 0;
	  var Complicity_Result = 0;
	  var Villany_Result = 0;
	  var Lack_Result = 0;
	  var Mediation_Result = 0;
	  var Beginningcounteraction_Result = 0;
	  var Departure_Result = 0;
	  var Firstfunctionofthedonor_Result = 0;
	  var Herosreaction_Result = 0;
	  var Heroaquiresmagicalagent_Result = 0;
	  var Guidance_Result = 0;
	  var Struggle_Result = 0;
	  var Branding_Result = 0;
	  var Victory_Result = 0;
	  var Liquidation_Result = 0;
	  var Retrn_Result = 0;
	  var Pursuit_Result = 0;
	  var Rescue_Result = 0;
	  var Unrecognizedarrival_Result = 0;
	  var Unfoundedclaims_Result = 0;
	  var Difficulttask_Result = 0;
	  var Solution_Result = 0;
	  var Recognition_Result = 0;
	  var Exposure_Result = 0;
	  var Transfiguration_Result = 0;
	  var Punishment_Result = 0;
	  var Wedding_Result = 0;

	  //Body of Order

	  var interdiction1_happen = GetRnd(1);
	  if (interdiction1_happen ==  1) {
	  Interdiction();
	  }

	  var absentation1_happen = GetRnd(1);
	  if (absentation1_happen == 1) {
	  Absentation();
	  }

	  var violation1_happen = 0;
	  if (interdiction1_happen == 1) {
	  Violation();
	  violation1_happen = 1;
	  }
	  if (interdiction1_happen == 0 ) {
	  violation1_happen = GetRnd(1);
	  if (violation1_happen == 1) {
	  Violation();
          }
	  }
	  var reconnaissance1_happen = GetRnd(1);
	  if (reconnaissance1_happen == 1) {
	  Reconnaissance();
	  }

	  var delivery1_happen = 0;
	  if (reconnaissance1_happen == 1) {
	  Delivery();
	  delivery1_happen = 1;
	  }
	  if (reconnaissance1_happen == 0 ) {
	  delivery1_happen = GetRnd(1);
	  if (delivery1_happen == 1) {
	  Delivery();
          }
	  }

	  var trickery1_happen = GetRnd(1);
	  if (trickery1_happen ==  1) {
	  Trickery();
	  }

	  var complicity1_happen = 0;
	  if (trickery1_happen == 1) {
	  Complicity();
	  complicity1_happen = 1;
	  }
	  if (trickery1_happen == 0 ) {
	  complicity1_happen = GetRnd(1);
	  if (complicity1_happen == 1) {
	  Complicity();
          }
	  }

	  var villany1_happen = GetRnd(1);
	  if (villany1_happen == 1) {
	  Villany();
	  }

	  var lack1_happen = 0;
	  if (villany1_happen == 0) {
	  Lack();
	  lack1_happen = 1;
	  }
	  if (villany1_happen == 1) {
	  lack1_happen = GetRnd(1);
	  if (lack1_happen == 1)    {
          Lack();
	  }
	  }

	  var mediation1_happen = 1;
	  Mediation();

	  var beginningcounteraction_happen = 0;
	  if (0 < Mediation_Result) {
	  if (Mediation_Result < 5){

	  beginningcounteraction_happen = GetRnd(1);
	  if (beginningcounteraction_happen == 1) {
          Beginningcounteraction();
          }
	  }
	  }

	  var departure1_happen = 0;
	  if (0 < Mediation_Result) {
	  if (Mediation_Result < 6) {
	  departure1_happen = GetRnd(1);
	  if (departure1_happen == 1){
	  Departure();
	  }
	  }
	  }

	  var firstfunctionofthedonor1_happen = GetRnd(1);
	  if (firstfunctionofthedonor1_happen == 1){
	  Firstfunctionofthedonor();
	  }

	  var herosreaction1_happen = 0;
	  if (firstfunctionofthedonor1_happen == 1){
	  herosreaction1_happen = 1;
	  Herosreaction();
	  }

	  var heroquiresmagicalagent1_happen = 0;

	  if (firstfunctionofthedonor1_happen == 1){
	  heroquiresmagicalagent1_happen = 1;
	  Heroaquiresmagicalagent();
	  }

	  if (firstfunctionofthedonor1_happen == 0){
	  heroquiresmagicalagent1_happen = GetRnd(1);
	  if (heroquiresmagicalagent1_happen == 0){
	  Heroaquiresmagicalagent();
	  }
	  }

	  var guidence1_happen = GetRnd(1);
	  if (guidence1_happen ==  1) {
	  Guidance();
	  }

	  var struggle1_happen = GetRnd(1);
	  if (Villany_Result == 6){
	  if (Heroaquiresmagicalagent_Result == 0){
	  struggle1_happen = 1;
	  }
	  }

	  if (Villany_Result == 0){
	  struggle1_happen = 0;
	  }


	  if (struggle1_happen ==  1) {
	  Struggle();
	  }

	  var branding1_happen = GetRnd(1);
	  if (branding1_happen ==  1) {
	  Branding();
	  }

	  var victory1_happen = 0;
	  if (struggle1_happen == 1) {
	  Victory();
	  victory1_happen = 1;
	  }
	  if (struggle1_happen == 0 ) {
	  if (villany1_happen == 1){
	  victory1_happen = GetRnd(1);
	  if (victory1_happen == 1) {
	  Victory();
	  }
	  }

	  }

	  var liquidation1_happen = 1
	  if (Victory_Result > 0) {
	  if (Villany_Result == 3){
	  liquidation1_happen = GetRnd(1);
	  if (liquidation1_happen == 1){
          Villany_Result = 0;
	  }

	  }
	  if (Villany_Result == 6){
	  liquidation1_happen = GetRnd(1);
	  if (liquidation1_happen == 1){
          Villany_Result = 0;
	  }
	  }
	  if (Villany_Result == 10){
	  liquidation1_happen = GetRnd(1);
	  if (liquidation1_happen == 1){
          Villany_Result = 0;
	  }
	  }
	  if (Villany_Result == 13){
	  liquidation1_happen = GetRnd(1);
	  if (liquidation1_happen == 1){
          Villany_Result = 0;
	  }
	  }
	  if (Villany_Result == 14){
	  liquidation1_happen = GetRnd(1);
	  if (liquidation1_happen == 1){
          Villany_Result = 0;
	  }
	  }
	  if (Villany_Result == 17){
	  liquidation1_happen = GetRnd(1);
	  if (liquidation1_happen == 1){
          Villany_Result = 0;
	  }
	  }
	  if (Villany_Result == 18){
	  liquidation1_happen = GetRnd(1);
	  if (liquidation1_happen == 1){
          Villany_Result = 0;
	  }
	  }
	  if (Villany_Result == 19){
	  liquidation1_happen = GetRnd(1);
	  if (liquidation1_happen == 1){
          Villany_Result = 0;
	  }
	  }
	  }

	  if (Lack_Result > 0) {
	  liquidation1_happen = 1;
	  }

	  if (liquidation1_happen == 1){
	  Liquidation();
	  }

	  var retrn1_happen = 0;
	  if (departure1_happen == 1){
	  retrn1_happen = GetRnd(1);
	  if (retrn1_happen ==1){
	  Retrn();
	  }
	  }

	  var pursuit1_happen = GetRnd(1);
	  if (pursuit1_happen ==  1) {
	  Pursuit();
	  }

	  var rescue1_happen = 0;
	  if (Pursuit_Result > 0){
	  Rescue();
	  rescue1_happen;
	  }

	  var unrecognizedarrival1_happen = 0

	  if (departure1_happen == 1){
	  unrecognizedarrival1_happen = GetRnd(1);
	  }

	  if (unrecognizedarrival1_happen == 1){
	  Unrecognizedarrival();
	  }


	  var unfoundedclaims1_happen = 0

	  if (retrn1_happen == 1){
	  unfoundedclaims1_happen = GetRnd(1);
	  }

	  if (unfoundedclaims1_happen == 1){
	  Unfoundedclaims();
	  }

	  var difficulttask1_happen = GetRnd(1);
	  if (difficulttask1_happen ==  1) {
	  Difficulttask();
	  }

	  var solution1_happen = 0;
	  if (difficulttask1_happen ==  1) {
	  solution1_happen = 1;
	  Solution();
	  }

	  var recognition1_happen = 0;
	  if (unrecognizedarrival1_happen == 1){
	  recognition1_happen = 1;
	  Recognition();
	  }

	  var exposure1_happen = 0;
	  if (unfoundedclaims1_happen == 1){
	  exposure1_happen = 1;
	  Exposure();
	  }

	  var transfiguration1_happen = GetRnd(1);
	  if (transfiguration1_happen ==  1) {
	  Transfiguration();
	  }

	  var punishment1_happen = 0;
	  if (villany1_happen == 1){
	  if (Victory_Result !== 4){
	  punishment1_happen = GetRnd(1);
	  }
	  }
	  if (unfoundedclaims1_happen == 1){
	  punishment1_happen = GetRnd(1);
	  }

	  if (punishment1_happen == 1){
	  Punishment();
	  }

	  var wedding1_happen = GetRnd(1);
	  if (Lack_Result == 1){
	  wedding1_happen = 1
	  }
	  if (wedding1_happen == 1){
	  Wedding();
	  }

	  document.write(story.join(''));

	  </script>

	  <!-- inline-script does story.push to produce output "here" -->

	</div>
      </div>
      <div id="I7" style="display:block;clear: both;" class="Text_Default">
	<div id="I7_sys_txt" class="sys_txt" style="margin:0px; padding:0px; color:; font:; background-color:;">
	  <p>&nbsp;</p>
	  <div style="PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px" id="I31_sys_txt" class="sys_txt">
	    <p align="right">
	      <font color="#000000">
		<font size="2">Copyright<font face="Georgia"> © 2011&nbsp;by <a href="mailto:sleonard1@mc3.edu">Sandra M. Leonard</a>
	      </font>
		</font>
	      </font>
	    </p>
	    <p align="right">
	      <font size="2">
		<font color="#000000" face="Georgia">No material may be republished or reproduced in any way without proper the author's written permission, except when </font>
	      </font>
	      <font size="2">
		<font color="#000000" face="Georgia">referencing or quoting a portion for&nbsp;limited educational purposes with correct accompanying citation.</font>
	    </font>&nbsp;</p>
	  </div>
	</div>
      </div>
    </div>
  </div>
</div>
</div>
</div>

</body>
</html>
